{
  "name": "@scottnonnenberg/notate",
  "version": "1.0.0",
  "description": "Extra err.stack entries for debuggability. Better than your plain 'if (err) { return cb(err) }'",
  "main": "dist/server/index.js",
  "scripts": {
    "release": "standard-version",
    "clean": "rm -rf dist/client/* dist/server/* coverage/client/* coverage/server/* coverage/combined/*",
    "lint": "eslint .",
    "precommit": "npm run clean && npm run lint && npm run build-client && npm run test",
    "prepublish": "npm run clean && npm run build-server && npm run build-client-production",
    "test": "npm run lint && npm run test-server-all && npm run test-client-all",
    "test-coverage": "npm run lint && npm run test-server-all-coverage && npm run test-client-all-coverage && npm run client-summary && npm run combined-summary && npm run send-to-codecov",
    "ci": "npm-run-all --parallel --race serve test-coverage",
    "serve": "http-server -p 8001 -a localhost",
    "build-server": "babel src --out-dir dist/server",
    "build-client": "webpack",
    "build-client-coverage": "npm run build-client -- --config webpack.config.coverage.js",
    "build-client-production": "npm run build-client -- --config webpack.config.production.js",
    "watch-client": "npm run build-client -- --watch",
    "watch-client-coverage": "npm run build-client -- --watch --config webpack.config.coverage.js",
    "test-sauce": "npm-run-all --parallel --race serve tunnel run-sauce",
    "tunnel": "babel-node scripts/tunnel.js",
    "run-sauce": "babel-node scripts/sauce_tests.js",
    "sauce-platforms": "babel-node scripts/sauce_platforms.js",
    "test-client": "mocha-phantomjs",
    "test-client-coverage": "mocha-phantomjs --hooks ./test/extract_coverage_hook.js",
    "test-client-unit": "npm run test-client -- http://localhost:8001/test/unit.html",
    "test-client-unit-coverage": "npm run test-client-coverage -- http://localhost:8001/test/unit.html",
    "test-client-integration": "npm run test-client -- http://localhost:8001/test/integration.html",
    "test-client-integration-coverage": "npm run test-client-coverage -- http://localhost:8001/test/integration.html",
    "test-client-all": "npm run test-client -- http://localhost:8001/test/all.html",
    "test-client-all-coverage": "npm run test-client-coverage -- http://localhost:8001/test/all.html",
    "test-server": "NODE_ENV=test mocha --recursive --compilers js:babel-core/register --require test/setup/mocha.js",
    "test-server-watch": "npm run test-server -- --watch",
    "test-server-coverage": "NODE_ENV=test babel-node ./node_modules/.bin/isparta cover _mocha -- --recursive --require test/setup/mocha.js",
    "test-server-unit": "npm run test-server -- -s 3 -t 150 test/unit",
    "test-server-unit-watch": "npm run test-server-watch -- -s 3 -t 150 test/unit",
    "test-server-unit-coverage": "npm run test-server-coverage -- test/unit",
    "test-server-integration": "npm run test-server -- -s 15 test/integration",
    "test-server-integration-watch": "npm run test-server-watch -- -s 15 test/integration",
    "test-server-integration-coverage": "npm run test-server-coverage -- test/integration",
    "test-server-all": "npm run test-server -- -s 15 test/unit test/integration",
    "test-server-all-watch": "npm run test-server-watch -- -s 15 test/unit test/integration",
    "test-server-all-coverage": "npm run test-server-coverage -- test/unit test/integration",
    "build-client-report": "istanbul report --include coverage/client/coverage.json --dir coverage/client",
    "posttest-client-unit-coverage": "npm run build-client-report",
    "posttest-client-integration-coverage": "npm run build-client-report",
    "posttest-client-all-coverage": "npm run build-client-report",
    "send-to-codecov": "codecov",
    "client-summary": "istanbul report text-summary --root coverage/client",
    "combine-coverage": "istanbul report --dir coverage/combined",
    "combined-summary": "istanbul report text-summary",
    "open-server-coverage": "open coverage/server/lcov-report/index.html",
    "open-client-coverage": "open coverage/client/lcov-report/index.html",
    "open-combined-coverage": "open coverage/combined/lcov-report/index.html"
  },
  "devDependencies": {
    "@scottnonnenberg/eslint-config-thehelp": "0.5.0",
    "app-module-path": "1.0.6",
    "babel-cli": "6.9.0",
    "babel-core": "6.9.0",
    "babel-istanbul-loader": "0.1.0",
    "babel-loader": "6.2.4",
    "babel-preset-es2015": "6.9.0",
    "babel-preset-es2015-loose": "7.0.0",
    "chai": "3.5.0",
    "codecov": "1.0.1",
    "common-tags": "1.1.1",
    "config": "1.20.1",
    "es3ify-loader": "0.2.0",
    "ghooks": "1.2.3",
    "http-server": "0.9.0",
    "isparta": "4.0.0",
    "istanbul": "0.4.2",
    "lodash": "4.17.10",
    "mocha": "2.3.4",
    "mocha-phantomjs": "4.0.2",
    "npm-run-all": "2.3.0",
    "phantomjs-prebuilt": "2.1.16",
    "sinon": "1.17.3",
    "standard-version": "2.3.0",
    "superagent": "3.8.3",
    "validate-commit-msg": "2.6.1",
    "webpack": "1.12.14"
  },
  "config": {
    "ghooks": {
      "commit-msg": "validate-commit-msg"
    },
    "validate-commit-msg": {
      "maxSubjectLength": 72
    }
  },
  "keywords": [
    "annotate",
    "error",
    "stack",
    "async",
    "cb",
    "err",
    "if",
    "return",
    "debuggability",
    "debug",
    "prettyPrint"
  ],
  "author": "Scott Nonnenberg <scott@nonnenberg.com>",
  "license": "MIT",
  "homepage": "https://github.com/scottnonnenberg/notate",
  "repository": {
    "type": "git",
    "url": "git@github.com:scottnonnenberg/notate.git"
  }
}
